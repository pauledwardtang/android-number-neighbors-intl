apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
  compileSdkVersion 29
  buildToolsVersion "29.0.2"

  defaultConfig {
    applicationId "io.phatcat.numberneighborsinternational"
    minSdkVersion 21
    targetSdkVersion 29
    versionCode 1
    versionName "1.0"

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }

  flavorDimensions "version"
  productFlavors {
    mock {
      dimension "version"
      applicationIdSuffix ".mock"
      versionNameSuffix "-mock"
    }

    prod {
      dimension "version"
    }
  }

  compileOptions {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
  }

  kotlinOptions {
    jvmTarget = JavaVersion.VERSION_1_8
  }

  dataBinding.enabled = true
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])

  implementation project(":domain")
  implementation project(":data")
  implementation project(":network")
  implementation project(":persistence")
  implementation project(":serialization")

  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
  implementation 'androidx.appcompat:appcompat:1.1.0'
  implementation 'androidx.core:core-ktx:1.2.0'
  implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
  implementation 'com.google.android.material:material:1.1.0'

  // Fragment
  implementation "androidx.fragment:fragment-ktx:$fragmentKtxVersion"

  // Lifecycle
  implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
  implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
  implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"

  // LeakCanary
  debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"

  // Moshi
  // Unfortunately, this project is a victim of this issue:
  // https://github.com/google/dagger/issues/970
  implementation "com.squareup.moshi:moshi:$moshiVersion"
  implementation "com.squareup.moshi:moshi-kotlin:$moshiVersion"

  // Retrofit
  // Unfortunately, this project is a victim of this issue:
  // https://github.com/google/dagger/issues/970
  implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
  implementation "com.squareup.retrofit2:converter-moshi:$retrofitMoshiConverterVersion"

  // Room
  // Unfortunately, this project is a victim of this issue:
  // https://github.com/google/dagger/issues/970
  implementation "androidx.room:room-runtime:$roomVersion"
  implementation "androidx.room:room-rxjava2:$roomVersion"
  kapt "androidx.room:room-compiler:$roomVersion"
  androidTestImplementation "androidx.room:room-testing:$roomVersion"

  // Dagger
  implementation "com.google.dagger:dagger:$daggerVersion"
  kapt "com.google.dagger:dagger-compiler:$daggerVersion"

  implementation "com.google.dagger:dagger-android:$daggerVersion"
  kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

  // Testing
  testImplementation "junit:junit:$junitVersion"
  testImplementation 'androidx.test:core:1.2.0' // Robolectric
  testImplementation "org.mockito:mockito-core:$mockitoCoreVersion"
  androidTestImplementation 'androidx.test.ext:junit:1.1.1'
  androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
